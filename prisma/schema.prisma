generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Departamento {
  id        Int      @id @default(autoincrement())
  numero    String
  torre     String   @default("A")
  usuarios  Usuario[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@unique([numero, torre])
  @@map("departamentos")
  @@index([numero])
  @@index([torre])
}

model Usuario {
  id             String       @id @default(uuid())
  nombre         String
  email          String       @unique
  departamento   Departamento? @relation(fields: [departamentoId], references: [id])
  departamentoId Int?
  encomiendas    Encomienda[]
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  
  @@map("usuarios")
}

model Encomienda {
  id             String        @id @default(uuid())
  codigo         String        @unique
  residente      Usuario?      @relation(fields: [residenteId], references: [id])
  residenteId    String?
  residenteNombre String       // ðŸ‘ˆ NUEVO: Nombre del residente
  transportista  String
  fechaRecepcion DateTime      @default(now())
  estado         String        @default("pendiente")
  prioridad      String        @default("normal")
  notificaciones Notificacion[]
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  
  @@map("encomiendas")
  @@index([estado])
  @@index([residenteId])
  @@index([fechaRecepcion])
}

model Notificacion {
  id           String     @id @default(uuid())
  encomienda   Encomienda @relation(fields: [encomiendaId], references: [id], onDelete: Cascade)
  encomiendaId String
  medio        String     // correo, app, sms
  mensaje      String?    // Contenido opcional del mensaje
  entregada    Boolean    @default(false)
  enviadoEn    DateTime   @default(now())
  
  @@map("notificaciones")
  @@index([encomiendaId])
}
